#!/bin/sh
# Copyright 2021 Northern.tech AS
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.

set -e

# Send all output to stderr, to avoid confusing the inventory parser in the
# client, which should only receive empty output from this script. The actual
# reporting we will do ourselves.
exec 1>&2

CONFIG=${TEST_CONFIG:-/var/lib/mender-configure/device-config.json}
CONFIG_ENDPOINT=${TEST_CONFIG_ENDPOINT:-api/devices/v1/deviceconfig/configuration}

# If the configuration file doesn't exist, exit silently
if ! [ -f "$CONFIG" ]; then
    exit 0
fi

# Fetch Authentication token and server from Mender Auth Manager.
DBUS_REPLY="$(dbus-send \
                        --system \
                        --print-reply \
                        --dest=io.mender.AuthenticationManager \
                        /io/mender/AuthenticationManager \
                        io.mender.Authentication1.GetJwtToken \
                        | sed -ne '/^ *string ".*" *$/ {s/^ *string "\(.*\)" *$/\1/; p}')"

AUTH_TOKEN="$(echo "$DBUS_REPLY" | sed -ne '1p')"
SERVER="$(echo "$DBUS_REPLY" | sed -ne '2p')"

if [ -z "$AUTH_TOKEN" ]; then
    echo "An authentication token could not be obtained over DBus."
    exit 1
fi
if [ -z "$SERVER" ]; then
    echo "A server address could not be obtained over DBus."
    exit 1
fi

curl \
    -Lf \
    -X PUT \
    -H "Authorization: Bearer ${AUTH_TOKEN}" \
    -H "Content-Type: application/json" \
    -d "@${CONFIG}" \
    "${SERVER}/${CONFIG_ENDPOINT}"

stages:
  - test
  - trigger

include:
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-github-status-updates.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-commits.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-license.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-python3-format.yml'

variables:
  MENDER_VERSION: master
  MENDER_ARTIFACT_VERSION: master
  MENDER_CONFIGURE_VERSION: $CI_COMMIT_REF_NAME

test:unit:
  stage: test
  needs: []
  image: python:alpine
  before_script:
    - apk add --update git make curl
    - git submodule update --init --recursive
  script:
    - make test

test:integration:
  stage: test
  needs: []
  image: docker:dind
  tags:
    - mender-qa-slave
  before_script:
    # DinD setup in mender-qa-slave
    - unset DOCKER_HOST
    - unset DOCKER_TLS_VERIFY
    - unset DOCKER_CERT_PATH
    # Start dockerd in the background
    - /usr/local/bin/dockerd &
    # Wait for dockerd to start
    - |-
      MAX_WAIT=30
      while [ ! -e "/var/run/docker.sock" ] && [ $MAX_WAIT -gt 0 ]; do
        MAX_WAIT=$(($MAX_WAIT - 1))
        sleep 1
      done
    # Verify that the docker server is up and running
    - docker version
    # Init the git submodules
    - apk add --update --no-cache $(cat tests/integration/apk-requirements.txt)
    - git submodule update --init --recursive
    # Install test dependencies
    - apk add --update --no-cache $(cat tests/integration/mender_integration/tests/requirements/apk-requirements.txt)
    - pip install -r tests/integration/mender_integration/tests/requirements/python-requirements.txt
    # Download and install mender-artifact
    - curl -f -O https://mender.s3.amazonaws.com/mender-artifact/$MENDER_ARTIFACT_VERSION/linux/mender-artifact
    - chmod ugo+x mender-artifact
    - mv mender-artifact /usr/bin/
  script:
    - cd tests/integration/
    - GENERATE_PYTEST_REPORT=true ./run.sh
  artifacts:
    expire_in: 2w
    when: always
    reports:
      junit: ${CI_PROJECT_DIR}/tests/integration/report.xml

trigger:mender-dist-packages:
  stage: trigger
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
  variables:
    MENDER_CONFIGURE_VERSION: $CI_COMMIT_REF_NAME
    PUBLISH_MENDER_DIST_PACKAGES_AUTOMATIC: "true"
  trigger:
    project: Northern.tech/Mender/mender-dist-packages
    branch: master
    strategy: depend

trigger:integration:
  stage: trigger
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
  trigger:
    project: Northern.tech/Mender/integration
    branch: master
    strategy: depend
